---
- name: add nodejs repo key
  apt_key: data="{{ lookup('file', 'nodesource.pub') }}" state=present

- name: add nodejs repo
  apt_repository: repo="deb https://deb.nodesource.com/node_4.x {{ ansible_distribution_release }} main"
                  state=present update_cache=yes
  # Note: the update_cache above should only run if we changed the system's repository config

- name: ensure that nodejs-legacy is not installed
  apt: pkg=nodejs-legacy state=absent

- name: install nodejs
  apt: pkg=nodejs state=latest

- name: check for build script in package.json
  command: awk '/\<scripts\>/,/\<build\>/' {{ source_dir }}/package.json
  register: package_json

- include: npm.yml
  when: package_json.stdout != ""

# TODO: find out if the latest gunicorn is ok, or if we really do want
# to pin to a version in the 19.1 series.
- name: install gunicorn
  pip: name=gunicorn
       state=latest
       virtualenv={{ venv_dir }}
       virtualenv_python=/usr/bin/python{{ python_version }}
  become_user: "{{ project_user }}"

- name: configure gunicorn
  template: src=gunicorn.conf
            dest=/etc/supervisor/conf.d/{{ project_name }}-gunicorn.conf
            owner=root
            group=root
            mode=0600
  register: supervisor_gunicorn

- name: reread supervisor conf files
  command: supervisorctl reread
  when: supervisor_gunicorn|changed

- name: reload supervisord
  command: supervisorctl reload
  when: supervisor_gunicorn|changed

- name: ensure gunicorn is running
  supervisorctl: name={{ project_name }}-server state=started

# TODO: let connections to 8000 through the firewall if we are load-balancing.

- name: collectstatic
  django_manage: >
    command=collectstatic
    app_path={{ source_dir }}
    virtualenv={{ venv_dir }}
  become_user: "{{ project_user }}"

- name: migrate
  django_manage: >
    command=migrate
    app_path={{ source_dir }}
    virtualenv={{ venv_dir }}
  become_user: "{{ project_user }}"

- name: copy shell script wrapper for manage.py
  template: src=manage.sh
            dest={{ root_dir }}/manage.sh
            owner={{ project_name }}
            group={{ project_name }}
            mode=700
