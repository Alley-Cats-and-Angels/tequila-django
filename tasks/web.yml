---
- name: install gunicorn
  pip:
    name: gunicorn
    state: present
    version: "{{ gunicorn_version|default(omit) }}"
    virtualenv: "{{ venv_dir }}"
    virtualenv_python: /usr/bin/python{{ python_version }}
  become_user: "{{ project_user }}"
  vars:
    ansible_ssh_pipelining: true

- name: configure gunicorn
  template: src=gunicorn.conf
            dest=/etc/supervisor/conf.d/{{ project_name }}-gunicorn.conf
            owner=root
            group=root
            mode=0600

- name: ensure gunicorn is present
  supervisorctl: name={{ project_name }}-server state=present

# TODO: let connections to 8000 through the firewall if we are load-balancing.

- name: migrate
  django_manage:
    command: migrate --noinput -v 0
    app_path: "{{ source_dir }}"
    virtualenv: "{{ venv_dir }}"
  become_user: "{{ project_user }}"
  run_once: true
  vars:
    ansible_ssh_pipelining: true

- name: restart gunicorn
  supervisorctl: name={{ project_name }}-server state=restarted

- name: copy shell script wrapper for manage.py
  template: src=manage.sh
            dest={{ root_dir }}/manage.sh
            owner={{ project_name }}
            group={{ project_name }}
            mode=700

# Note: we want the npm build and collectstatic steps to happen at the
# very end of the roles section for the current playbook, so that
# they'll still happen in the order needed even if the playbook has a
# 3rd-party role after tequila-django, e.g. geerlingguy/nodejs.  Thus,
# they are moved out into handlers.

- name: trigger build of npm artifacts
  command: /bin/true
  notify:
    - chown node_modules
    - npm run build
  when: package_json.stat.exists == True and build_script.stdout != ""

- name: trigger collectstatic
  command: /bin/true
  notify:
    - collectstatic
